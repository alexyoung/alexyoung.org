---
layout: post
title: "iPhone 3.0 Development Glitches"
categories: 
- programming
- iphone
---

I had a few glitches in the "Helipad":http://helipadapp.com/ iPhone app when 3.0 rolled around.  I've put the solution here to help those of you searching for the error message.

Helipad syncs to our web app and displays a syncing progress screen.  I open this view in a new view controller like this:

{% highlight objc %}
SyncController *sync = [[SyncController alloc] initWithNibName:@"SyncController"
                                                        bundle:nil];
[self presentModalViewController:sync animated:YES];
{% endhighlight %}

The parent view displays a <code>UIWebView</code>, and the controller runs the sync process on another thread so the display can be updated with feedback.  The problem was that updating <code>UIWebView</code> crashed the app:

<blockquote>
bool _WebTryThreadLock(bool): Tried to obtain the web lock from a thread
other than the main thread or the web thread. This may be a result of calling
to UIKit from a secondary thread.
</blockquote>

I can only assume that this was caused as part of the improvements to <code>UIWebView</code>'s performance.  The crash actually occurred when the sync process called <code>dismissModalViewControllerAnimated:</code>.  To resolve this, I called it on the main thread like this:

{% highlight objc %}
[self performSelectorOnMainThread:@selector(dismissSyncView) 
                       withObject:nil
                    waitUntilDone:YES];</pre>
{% endhighlight %}

My method, dismissSyncView, looks like this:

{% highlight objc %}
- (void)dismissSyncView {
    [self dismissModalViewControllerAnimated:YES];
    // Other custom code goes here  
}
{% endhighlight %}

